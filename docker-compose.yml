version: '3.8'

services:
  # ----------------------------------------------------
  # Servicio de Aplicación (PHP-FPM)
  # ----------------------------------------------------
  app:
    # Construye la imagen usando el Dockerfile en el directorio actual
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dalintex-app
    # Monta el código fuente en el contenedor
    volumes:
      - .:/var/www/html
    # Depende de que la base de datos esté lista
    depends_on:
      - db
    # Usa variables de entorno del archivo .env
    env_file:
      - .env
    # Red interna para comunicación entre contenedores
    networks:
      - dalintex-network

  # ----------------------------------------------------
  # Servicio Web (Nginx)
  # ----------------------------------------------------
  nginx:
    image: nginx:stable-alpine
    container_name: dalintex-nginx
    # Monta el código y un archivo de configuración de Nginx
    volumes:
      - .:/var/www/html
      # Archivo de configuración de Nginx (debe crearse este archivo)
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
    # Mapea el puerto 80 del contenedor al puerto 8080 de tu máquina host
    ports:
      - "8080:80"
    depends_on:
      - app
    networks:
      - dalintex-network

  # ----------------------------------------------------
  # Servicio de Base de Datos (MySQL)
  # ----------------------------------------------------
  db:
    image: mysql:8.0
    container_name: dalintex-mysql
    # Mapea un volumen para persistir los datos de la base de datos
    volumes:
      - db-data:/var/lib/mysql
    # Usa variables de entorno del archivo .env
    env_file:
      - .env
    # Reinicia si falla
    restart: always
    networks:
      - dalintex-network

# ----------------------------------------------------
# Redes y Volúmenes
# ----------------------------------------------------
networks:
  dalintex-network:
    driver: bridge

volumes:
  db-data:
