version: '3.8'

services:
    # ---------------------------------------------
    # 1. PHP-FPM (Servicio 'app')
    # Utiliza el Dockerfile para construir la imagen.
    # ---------------------------------------------
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: laravel-app
        # Monta el código fuente en el contenedor
        volumes:
            - .:/var/www/html
        # Instala dependencias de Composer al inicio del contenedor.
        # Esto se ejecuta solo una vez al crear/iniciar.
        command: sh -c "composer install --ignore-platform-reqs && php artisan migrate --seed --force && php-fpm"
        # Necesario para que Nginx pueda comunicarse
        ports:
            - "9000:9000"
        networks:
            - laravel-network
        restart: unless-stopped
        user: "appuser" # Ejecuta PHP-FPM con el usuario no-root definido en el Dockerfile

    # ---------------------------------------------
    # 2. Nginx (Servicio 'web')
    # Servidor web que sirve la aplicación Laravel.
    # ---------------------------------------------
    web:
        image: nginx:stable-alpine
        container_name: laravel-nginx
        volumes:
            # Monta el código de la aplicación para que Nginx lo sirva
            - .:/var/www/html
            # Monta el archivo de configuración de Nginx
            - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
        # Expone el puerto 80 del contenedor al puerto 8000 de tu máquina host
        ports:
            - "8000:80"
        networks:
            - laravel-network
        depends_on:
            - app
        restart: unless-stopped

    # ---------------------------------------------
    # 3. MySQL (Servicio 'db')
    # Base de datos. Los datos persisten en el volumen 'db-data'.
    # ---------------------------------------------
    db:
        image: mysql:8.0
        container_name: laravel-mysql
        environment:
            # Variables de entorno que deben coincidir con tu .env.example
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
        volumes:
            - db-data:/var/lib/mysql
        # Expone el puerto 3306 a tu host (opcional, pero útil para herramientas externas)
        ports:
            - "3306:3306"
        networks:
            - laravel-network
        restart: unless-stopped

# Definición de volúmenes persistentes
volumes:
    db-data:

# Definición de la red interna
networks:
    laravel-network:
        driver: bridge